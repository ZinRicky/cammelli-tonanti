(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     40410,       1024]
NotebookOptionsPosition[     34041,        917]
NotebookOutlinePosition[     34797,        943]
CellTagsIndexPosition[     34754,        940]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Corso di Laboratorio Computazionale \[LongDash] Corso di Laurea in Matematica \
\[LongDash] Universit\[AGrave] di Padova.\
\>", "Department",
 CellChangeTimes->{{3.794994124658628*^9, 
  3.7949941850996037`*^9}},ExpressionUUID->"fe6bf087-39c0-4d57-bbb8-\
676949ad7429"],

Cell["Anno Accademico 2019-2020", "Date",
 CellChangeTimes->{{3.7949941902012987`*^9, 
  3.7949942089217854`*^9}},ExpressionUUID->"ef18cc5a-c401-44b0-a51b-\
2c900d04a1bf"],

Cell[CellGroupData[{

Cell["Esercizi 2. Crittografia", "Title",
 CellChangeTimes->{{3.794994215766157*^9, 3.7949942326650686`*^9}, {
   3.794998375288208*^9, 3.7949983803135004`*^9}, {3.7950125964211664`*^9, 
   3.795012597874813*^9}, 3.795629178732089*^9, {3.7959393669091005`*^9, 
   3.795939374697331*^9}},ExpressionUUID->"b8994244-0fca-44bc-85f5-\
442afc4c6702"],

Cell[TextData[{
 "Notebook del gruppo ",
 StyleBox["Cammelli Tonanti.",
  FontSlant->"Plain"],
 "\nComponenti del gruppo:",
 StyleBox[" Francesco Tognetti, Riccardo Cazzin.",
  FontSlant->"Plain"],
 "\n",
 StyleBox["Se ci sono stati collaborazioni o aiuti al di fuori del gruppo, \
dichiararli.\n",
  FontSize->10],
 "In collaborazione con\nAiutati da"
}], "Author",
 CellChangeTimes->{{3.794994269687989*^9, 3.7949942998707647`*^9}, {
  3.7949946561398306`*^9, 3.7949946773934655`*^9}, {3.7949947543436556`*^9, 
  3.794994807461353*^9}, {3.795611014622757*^9, 
  3.7956110149398327`*^9}},ExpressionUUID->"09e83f57-2ba0-4605-8456-\
803100daaceb"],

Cell[CellGroupData[{

Cell["Esercizio 2.1 (Decrittazione di messaggio (Hill)).", "Section",
 CellChangeTimes->{{3.7949943102992196`*^9, 3.7949943351693068`*^9}, {
  3.7959393793857903`*^9, 
  3.795939401825362*^9}},ExpressionUUID->"7348fc72-0a82-422a-93e7-\
ec05ca114753"],

Cell[CellGroupData[{

Cell["Testo dell\[CloseCurlyQuote]esercizio", "Subsection",
 CellChangeTimes->{{3.7949943866385655`*^9, 
  3.794994390691738*^9}},ExpressionUUID->"81e6d6f4-d46b-4563-8c7b-\
b0dffb28d66a"],

Cell["Il messaggio", "Text",
 CellChangeTimes->{{3.7949944586941924`*^9, 3.794994494827001*^9}, {
  3.7959394144336724`*^9, 
  3.795939416971913*^9}},ExpressionUUID->"4356a50f-3fc3-4472-ae74-\
face461776fa"],

Cell["\<\
\"WWMGuuuqkYUFwYcWV'. \
YryomxpQvkfmzaqqpKQEtUpWKES.\
ZArynoXGDqrymGOeQEvkfmzaqqpKQEtUpWKEtCuoXPqqYxiqZAKEaDocjVKseHV' \
WPtCTC'.KKzxranoXGDqKEuuWWcQXPxGpKfvxGEVKEtzJyaDTUxGEV' sCeExwNbrvkluKEuuGG' \
alAhqraryhqKEuuGGLXcYncCCgapQncDqyouq; aXGOqkkGGgaGfOl; IJyaDqWqWrymGOeQE; \
aXGOqkk' alAhqraM.wTTRWkuuMGuuGGMGqqTUsgfRJyITUFOqqqWnTXqTtwwNTXncCCpyKETXryo \
UFKErjkkgLLmwT'' xvncqmyomxpQOqqqWnTXryqqpyQEVtqT; \
UEbxvkkWnTXuuTUvkfmzaqqpKQErynoXGDqyoYoBFvklutUv' \
kkIZJyKErjkkgLdS`mevQEFlKK.`kI; U.lhRUtaD\"\
\>", "CodeText",
 CellChangeTimes->{{3.7959394839389305`*^9, 
  3.795939501878023*^9}},ExpressionUUID->"439c6d89-eac4-4078-b85d-\
3b0955330f1d"],

Cell["\<\
\[EGrave] stato prima codificato in una lista di numeri, poi crittato con \
Hill ed infine decodificato e ritrasformato in una stringa. La \
codifica/decodifica iniziale e finale utilizza i seguenti codici numerici per \
i seguenti 58 caratteri, che includono tutte le lettere minuscole e maiuscole \
e altri sei caratteri:\
\>", "Text",
 CellChangeTimes->{{3.7959395155444775`*^9, 
  3.795939535237849*^9}},ExpressionUUID->"8790ee4b-4e7b-4ea2-8ca6-\
d839c0c2c25c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["Carattere",
       HoldForm], 
      TagBox["ASCII",
       HoldForm], 
      TagBox[
       RowBox[{"Codice", " ", "usato"}],
       HoldForm]},
     {
      RowBox[{"A", ",", " ", "\[Ellipsis]", ",", " ", "Z"}], 
      RowBox[{"65", ",", " ", "\[Ellipsis]", ",", " ", "90"}], 
      RowBox[{"1", ",", "\[ThinSpace]", "\[Ellipsis]", ",", "\[ThinSpace]", 
       RowBox[{"26", " ", 
        RowBox[{"(", 
         RowBox[{"ASCII", " ", "-", " ", "64"}], ")"}]}]}]},
     {
      RowBox[{"a", ",", " ", "\[Ellipsis]", ",", " ", "z"}], 
      RowBox[{"97", ",", " ", "\[Ellipsis]", ",", " ", "122"}], 
      RowBox[{"33", ",", "\[ThinSpace]", "\[Ellipsis]", ",", "\[ThinSpace]", 
       RowBox[{"58", " ", 
        RowBox[{"(", 
         RowBox[{"ASCII", " ", "-", " ", "64"}], ")"}]}]}]},
     {".", "46", "27"},
     {",", "44", "28"},
     {"spazio", "32", "29"},
     {"`", "96", "30"},
     {"'", "39", "31"},
     {";", "59", "32"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {None, {"Carattere", "ASCII", "Codice usato"}}, 
    TableAlignments -> Center]]]], "Text",
 CellChangeTimes->{{3.7959396790834866`*^9, 3.7959397101763897`*^9}, {
  3.795939777127455*^9, 3.795939806078122*^9}, {3.7959399101171036`*^9, 
  3.795939918276268*^9}, {3.7959399577408085`*^9, 3.795940069582938*^9}},
 TextAlignment->Center,
 TextJustification->0.,ExpressionUUID->"ab166c8a-b880-418a-948e-f0f359bca1ee"],

Cell[TextData[{
 "La crittazione alla Hill \[EGrave] stata fatta usando una matrice intera ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "\[Times]", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "92440b16-c089-4f72-ab12-caa6a1c4da6a"],
 " invertibile in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "58"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6c398cac-532b-4c85-bf42-9cae1bff50b4"],
 ". Ci sono circa 12 milioni di tali matrici (scritte a coefficienti in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "58"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "04d7f2b9-d760-436b-8870-9b548cc75bfc"],
 ") e di esse oltre 4 milioni  sono invertibili in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "58"], TraditionalForm]],
  ExpressionUUID->"cb36268d-b01c-413b-ae49-65807f9c90a3"],
 ". Questo \[EGrave] un numero troppo alto per provare a decrittare il \
messaggio con tutte. Per\[OGrave] si sa che il messaggio \[EGrave] stato \
crittato usando una matrice invertibile in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalZ]", "58"], TraditionalForm]],
  ExpressionUUID->"a5a6c3e7-5f74-4a19-a557-e7cfce5b9791"],
 " il cui determinante \[EGrave] congruo a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", " ", 
    RowBox[{"(", 
     RowBox[{"mod", " ", "58"}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "713f4ae7-8659-4b8a-8989-9ef54f755189"],
 " e ci sono \[OpenCurlyDoubleQuote]solo\[CloseCurlyDoubleQuote] ",
 Cell[BoxData[
  FormBox["146160", TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d061ffd1-a9ec-4c7f-8248-b635621ba3ed"],
 " tali matrici."
}], "Text",
 CellChangeTimes->{{3.795940102539873*^9, 
  3.7959401831315513`*^9}},ExpressionUUID->"45b7179a-180b-45d2-981f-\
1cd7235ffa50"]
}, Closed]],

Cell[CellGroupData[{

Cell["Svolgimento", "Subsection",
 CellChangeTimes->{{3.795940086079856*^9, 
  3.795940087723462*^9}},ExpressionUUID->"cabe64b0-bca6-43b5-9d22-\
8e597daf2fe3"],

Cell["Innanzitutto assegniamo il messaggio ad una variabile.", "Text",
 CellChangeTimes->{{3.7959402374326906`*^9, 
  3.795940250835868*^9}},ExpressionUUID->"b111f711-df1b-446c-850a-\
ed232cc7101d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "messaggio", "=", 
   "\"\<WWMGuuuqkYUFwYcWV'. \
YryomxpQvkfmzaqqpKQEtUpWKES.\
ZArynoXGDqrymGOeQEvkfmzaqqpKQEtUpWKEtCuoXPqqYxiqZAKEaDocjVKseHV' \
WPtCTC'.KKzxranoXGDqKEuuWWcQXPxGpKfvxGEVKEtzJyaDTUxGEV' sCeExwNbrvkluKEuuGG' \
alAhqraryhqKEuuGGLXcYncCCgapQncDqyouq; aXGOqkkGGgaGfOl; IJyaDqWqWrymGOeQE; \
aXGOqkk' alAhqraM.wTTRWkuuMGuuGGMGqqTUsgfRJyITUFOqqqWnTXqTtwwNTXncCCpyKETXryo \
UFKErjkkgLLmwT'' xvncqmyomxpQOqqqWnTXryqqpyQEVtqT; \
UEbxvkkWnTXuuTUvkfmzaqqpKQErynoXGDqyoYoBFvklutUv' \
kkIZJyKErjkkgLdS`mevQEFlKK.`kI; U.lhRUtaD\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.795940252983119*^9, 3.7959402639139256`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"4fbaaade-e29e-4f18-ad2d-ab97b4f52026"],

Cell["\<\
Controlliamo, poi, che la stringa ricevuta abbia un numero pari di caratteri, \
cos\[IGrave] da rendere pi\[UGrave] agevole la decrittazione in seguito.\
\>", "Text",
 CellChangeTimes->{{3.795940303677643*^9, 
  3.79594035118371*^9}},ExpressionUUID->"d94fc2c2-3b18-4b69-a368-\
e7175515a8ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Length", "@", "messaggio"}], "//", "EvenQ"}]], "Input",
 CellChangeTimes->{{3.79594028994036*^9, 3.7959402997441654`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"5e628863-340f-45c2-935c-07ab17249f85"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7959403000124493`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"113552dd-4604-43d3-a2e4-1c64a02a5240"]
}, Open  ]],

Cell["\<\
Creiamo una funzione che converta le stringhe nel sistema a cinquantotto \
caratteri richiesto. Bench\[EAcute] non sia necessariamente l\
\[CloseCurlyQuote]approccio pi\[UGrave] elegante, decidiamo di sottrarre 64 \
dal codice ASCII di tutti i caratteri e di aggiustare con regole di \
sostituzione adeguate i caratteri non alfabetici.\
\>", "Text",
 CellChangeTimes->{{3.7959404873947105`*^9, 3.7959405198480034`*^9}, {
  3.795940598254492*^9, 3.7959406672062016`*^9}, {3.795941224173805*^9, 
  3.795941231661837*^9}},ExpressionUUID->"fbb49879-5776-44d7-bc1c-\
d8debfa85312"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stringaAdNumeri", "[", "str_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ToCharacterCode", "[", "str", "]"}], "-", "64"}], 
    "\[IndentingNewLine]", ")"}], "/.", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"46", "-", "64"}], "\[Rule]", "27"}], ",", 
     RowBox[{"(*", "punto", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"44", "-", "64"}], "\[Rule]", "28"}], ",", 
     RowBox[{"(*", "virgola", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"32", "-", "64"}], "\[Rule]", "29"}], ",", 
     RowBox[{"(*", "spazio", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"96", "-", "64"}], "\[Rule]", "30"}], ",", 
     RowBox[{"(*", 
      RowBox[{"accento", " ", "grave"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"39", "-", "64"}], "\[Rule]", "31"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"apostrofo", " ", "/", " ", "accento"}], " ", "acuto"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"59", "-", "64"}], "\[Rule]", "32"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{"punto", " ", "e", " ", "virgola"}], "*)"}], 
    "\[IndentingNewLine]", "}"}]}]}]], "Input",
 CellChangeTimes->{{3.795940526712616*^9, 3.7959405842568445`*^9}, {
  3.795940682513319*^9, 3.7959408292292223`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"847edc61-7366-4813-85cc-75746b5f7c4b"],

Cell[TextData[{
 "Analogamente, ne scriviamo anche la funzione inversa. Poich\[EAcute] le \
regole di sostituzione sono formalmente espressioni del tipo ",
 StyleBox["Rule[expr1, expr2]", "Code"],
 ", usiamo ",
 StyleBox["Reverse", "Code"],
 " per non doverle riscrivere a rovescio manualmente."
}], "Text",
 CellChangeTimes->{{3.7959414280879354`*^9, 3.7959414417025523`*^9}, {
  3.795941639271555*^9, 3.7959416889478493`*^9}, {3.7959418104641256`*^9, 
  3.795941813822116*^9}},ExpressionUUID->"8636793d-2840-4d31-8ce6-\
e635380122bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"numeriAdStringa", "[", "l_", "]"}], ":=", 
  RowBox[{"ToCharacterCode", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"l", "/.", 
      RowBox[{"Reverse", "/@", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"46", "-", "64"}], "\[Rule]", "27"}], ",", 
         RowBox[{"(*", "punto", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"44", "-", "64"}], "\[Rule]", "28"}], ",", 
         RowBox[{"(*", "virgola", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"32", "-", "64"}], "\[Rule]", "29"}], ",", 
         RowBox[{"(*", "spazio", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"96", "-", "64"}], "\[Rule]", "30"}], ",", 
         RowBox[{"(*", 
          RowBox[{"accento", " ", "grave"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"39", "-", "64"}], "\[Rule]", "31"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"apostrofo", " ", "/", " ", "accento"}], " ", "acuto"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"59", "-", "64"}], "\[Rule]", "32"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"punto", " ", "e", " ", "virgola"}], "*)"}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", ")"}], "+", 
    "64"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.79594144495086*^9, 3.795941455535587*^9}, {
  3.795941508049239*^9, 3.7959416285841556`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"d0bb7de7-65dc-416b-84be-91aca69b66a9"],

Cell[TextData[{
 "Scriviamo una funzione che divida in coppie la lista di numeri creata dalla \
trasformazione da stringhe a numeri. Non dobbiamo preoccuparci di gestire il \
caso in cui la stringa abbia un numero dispari di caratteri, perch\[EAcute] ",
 StyleBox["messaggio", "Code"],
 " \[EGrave] di lunghezza pari."
}], "Text",
 CellChangeTimes->{{3.7959422244927273`*^9, 
  3.7959423202159386`*^9}},ExpressionUUID->"8465d221-715a-4cfc-b23e-\
bff051468095"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coppie", "[", "l_", "]"}], ":=", 
  RowBox[{"Partition", "[", 
   RowBox[{"l", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.795941938975711*^9, 
  3.795941975060281*^9}},ExpressionUUID->"5839d800-b019-4f1b-9991-\
4a47a26c7926"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Esercizio 2.2 (RSA)", "Section",
 CellChangeTimes->{{3.7960296254333863`*^9, 
  3.7960296466912527`*^9}},ExpressionUUID->"7df0488e-d91b-4cc3-b655-\
701814b02422"],

Cell[CellGroupData[{

Cell["Testo dell\[CloseCurlyQuote]esercizio", "Subsection",
 CellChangeTimes->{{3.796029666593125*^9, 
  3.7960296738501225`*^9}},ExpressionUUID->"b4c6cc9e-3654-43c9-9727-\
515183d4a568"],

Cell[TextData[{
 "1) Determinare, usando le capacit\[AGrave] simboliche di ",
 StyleBox["Mathematica,",
  FontSlant->"Italic"],
 " un\[CloseCurlyQuote]espressione della chiave privata ",
 StyleBox["b",
  FontSlant->"Italic"],
 " in funzione di ",
 StyleBox["m,p,q",
  FontSlant->"Italic"],
 " e ",
 StyleBox["a",
  FontSlant->"Italic"],
 ". \n\n2) Scrivere una funzione che crei in modo random le chiavi pubbliche \
(",
 StyleBox["m,a",
  FontSlant->"Italic"],
 ") e private (",
 StyleBox["m,b",
  FontSlant->"Italic"],
 ") per RSA. (Nota: ",
 StyleBox["a",
  FontSlant->"Italic"],
 " pu\[OGrave] essere `poco random\[CloseCurlyQuote], per esempio molto \
piccolo---la segretezza del sistema dipende dalla difficolt\[AGrave] di \
determinare ",
 StyleBox["b",
  FontSlant->"Italic"],
 "). \n\n3) Provare a generare delle chiavi RSA che siano \
\[OpenCurlyDoubleQuote]",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "-mente sicure\[CloseCurlyDoubleQuote]: ",
 StyleBox["m",
  FontSlant->"Italic"],
 " \[EGrave] cos\[IGrave] grande che ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " non riesce a fattorizzarlo in un tempo ragionevole. \n\n4) Se non riuscite \
a generare cos\[IGrave] dei primi ",
 StyleBox["p",
  FontSlant->"Italic"],
 " e ",
 StyleBox["q",
  FontSlant->"Italic"],
 " abbastanza grandi, cercateli su libri o in internet; per esempio, si \
possono usare dei \[OpenCurlyDoubleQuote]primorial primes\
\[CloseCurlyDoubleQuote] e/o, perch\[EAcute] no, dei \
\[OpenCurlyDoubleQuote]Padovan primes\[CloseCurlyDoubleQuote].\n\n5) Dopo \
aver creato le vostre chiavi RSA personali",
 StyleBox[" (m,a,b)",
  FontSlant->"Italic"],
 " usatele per inviare la soluzione dell\[CloseCurlyQuote]esercizio \
precedente: \ncrittate la stringa decrittata con le vostre chiavi private (",
 StyleBox["m,b",
  FontSlant->"Italic"],
 ") e con le chiavi pubbliche ",
 StyleBox["(m\[CloseCurlyQuote],a\[CloseCurlyQuote]",
  FontSlant->"Italic"],
 ") del docente, che sono\n\nm\[CloseCurlyQuote] = ",
 Cell[BoxData[
  FormBox[
  "323969271791054600351411948855997715401088419151998666575938718146322138626\
98727791094102157", TraditionalForm]],ExpressionUUID->
  "e0ab6be3-3a73-47b9-9f94-37b8e595766c"],
 "\n\na\[CloseCurlyQuote]= ",
 Cell[BoxData[
  FormBox[
  "259175417432843680281129559084798161416826315844270307521190547611647477478\
60237097951508301", TraditionalForm]],ExpressionUUID->
  "c283682b-2319-459c-ad6d-6abd70b5bcff"],
 "\n\nNon dimenticate di indicare nel notebook le vostre chiavi pubbliche!\n\n\
Attenzione: l\[CloseCurlyQuote]ordine in cui applicare le crittazioni con le \
chiavi (",
 StyleBox["m,b",
  FontSlant->"Italic"],
 ") e (",
 StyleBox["m\[CloseCurlyQuote],a\[CloseCurlyQuote]",
  FontSlant->"Italic"],
 ") non \[EGrave] indifferente: dipende da quale sia maggiore fra ",
 StyleBox["m ",
  FontSlant->"Italic"],
 "ed ",
 StyleBox["m",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]: pensateci e fate la cosa giusta."
}], "Text",
 CellChangeTimes->{
  3.796029691855674*^9, {3.796029758330737*^9, 3.796029764518262*^9}, {
   3.796119896122798*^9, 
   3.7961199094277945`*^9}},ExpressionUUID->"9cefe237-e1bf-470c-a6b5-\
02e1d9de5442"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Svolgimento", "Subsection",
 CellChangeTimes->{{3.7960300380109725`*^9, 
  3.7960300413949723`*^9}},ExpressionUUID->"fa37b89e-7e27-4d3b-9771-\
8f78e1dd2846"],

Cell["1) creiamo un\[CloseCurlyQuote]espressione per b", "Text",
 CellChangeTimes->{{3.7960311343255033`*^9, 3.796031141229504*^9}, {
  3.7960312060854216`*^9, 
  3.7960312166383657`*^9}},ExpressionUUID->"5c1b513a-8ad8-4fee-acfa-\
96ecf4506779"],

Cell[BoxData[
 RowBox[{
  RowBox[{"keyb", "[", 
   RowBox[{"p_", ",", "q_", ",", "a_"}], "]"}], ":=", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"a", ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "-", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"q", "-", "1"}], ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796031146018505*^9, 3.7960312040230875`*^9}, {
  3.7960320617582235`*^9, 3.7960320620312223`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"7a71d576-5406-4e5f-9d17-98e27a1b0329"],

Cell[TextData[{
 "2) conviene creare la funzione all' interno di un modulo cos\[IGrave] da \
localizzare la creazione di p e q, dandoci comunque la possibilit\[AGrave] di \
darli in input esterno;\n difatti se p0 e q0 sono primi l'",
 StyleBox["If ", "ExternalLanguage"],
 "Restituir\[AGrave] vero alla prima iterazione, mantenendo i p0 e q0 \
assegnati.\n Se invece volessimo dei numeri random baster\[AGrave] mettere p0 \
e q0 non primi (ad esempio 4,4) ed il processo di randomizzazione comincer\
\[AGrave] come previsto."
}], "Text",
 CellChangeTimes->{{3.7960312844203844`*^9, 3.7960313336267433`*^9}, {
  3.796032492469322*^9, 3.7960324929963236`*^9}, {3.7960325241081715`*^9, 
  3.7960326968800077`*^9}, {3.7960327880684223`*^9, 
  3.7960328750890784`*^9}},ExpressionUUID->"dbb0d2d1-3850-48f3-9fa4-\
51705e07ecbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mab", "[", 
   RowBox[{"p0_", ",", "q0_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p", ",", "q"}], "}"}], ",", "\[IndentingNewLine]", "\t\t\t", 
    RowBox[{
     RowBox[{
      RowBox[{"check", "[", 
       RowBox[{"{", 
        RowBox[{"p_", ",", "q_"}], "}"}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PrimeQ", "[", "p", "]"}], "&&", 
         RowBox[{"PrimeQ", "[", "q", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "q"}], "}"}], ",", 
        RowBox[{"Prime", "@", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             SuperscriptBox["10", "9"], ",", 
             SuperscriptBox["10", "11"]}], "}"}], ",", "2"}], "]"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", ",", "q"}], "}"}], "=", 
      RowBox[{"FixedPoint", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"check", "[", "#", "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"p0", ",", "q0"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"a", "=", 
      RowBox[{"Prime", "@", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", "5"], ",", 
          SuperscriptBox["10", "7"]}], "}"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\t\t\t", 
     RowBox[{"b", "=", " ", 
      RowBox[{"keyb", "[", 
       RowBox[{"p", ",", "q", ",", "a"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\t\t\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "a", ",", "b"}], "}"}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", " ", "q"}], ",", "a", ",", "b"}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "\t\t\t", "]"}]}]], "Input",
 CellChangeTimes->{{3.796031343476652*^9, 3.7960313822575226`*^9}, {
  3.7960314350887356`*^9, 3.796031476661648*^9}, {3.7960315078192177`*^9, 
  3.7960315368841*^9}, {3.7960316333858*^9, 3.796031834163395*^9}, {
  3.7960318867435293`*^9, 3.796032156605761*^9}, {3.7960323353212633`*^9, 
  3.7960323877850823`*^9}, {3.796032458706355*^9, 3.7960325207135177`*^9}, {
  3.7960325589154367`*^9, 3.79603256119843*^9}, {3.7960327178888226`*^9, 
  3.7960327501608257`*^9}, {3.7960358362778435`*^9, 3.7960358393728433`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"ab352f2f-5759-445d-aa37-3a61d00ced30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mab", "[", 
  RowBox[{"4", ",", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.796120510637799*^9, 3.796120519483798*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"046b3850-d42b-4249-b590-d90ab636a271"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "493282856357791169851499", ",", "86660627", ",", 
   "105302616575004898565147"}], "}"}]], "Output",
 CellChangeTimes->{3.7961205243257923`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"f13fca37-f09d-4847-8396-dc2c3b6eb74e"]
}, Open  ]],

Cell["\<\
generiamo delle chiavi con dei primi di 30 cifre trovati su internet (dal \
sito https://bigprimes.org ) \
\>", "Text",
 CellChangeTimes->{{3.796033062697856*^9, 3.796033166647275*^9}, {
  3.796116908676849*^9, 
  3.7961169118468504`*^9}},ExpressionUUID->"75bd5ad1-bbec-4ecc-b320-\
751b0be1e46b"],

Cell[TextData[{
 "pubbliche Cammelli tonanti:\nm = ",
 Cell[BoxData[
  FormBox[
  "134730867248747143322781722117343687452495402440369304273009", 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f03b0906-dc63-4240-83a5-a63db1382873"],
 "\na = 164573911"
}], "Text",
 CellChangeTimes->{{3.796116788306855*^9, 3.7961168232508497`*^9}, {
  3.7962852024328313`*^9, 
  3.7962852034700055`*^9}},ExpressionUUID->"7884f221-ca30-4715-b8f6-\
736aed52d6fe"],

Cell["\<\
b = 10924854930282982244274559842650134912878167934073120994011 (per \
Riccardo, ricordiamoci di cancellarlo)\
\>", "Text",
 CellChangeTimes->{{3.7961168722508507`*^9, 
  3.7961168927458496`*^9}},ExpressionUUID->"8d32995c-f1ac-43d8-86a0-\
15ed263e1c36"],

Cell["\<\
Avendo verificato che la fattorizzazione non \[EGrave] immediata scriviamo le \
funzioni per codificare il messaggio \
\>", "Text",
 CellChangeTimes->{{3.7961169313098545`*^9, 3.796116935930854*^9}, {
  3.7961170804327936`*^9, 
  3.796117127676793*^9}},ExpressionUUID->"a2c92bf1-1112-43bd-a0a3-\
3ddad4554da8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "messaggio", "=", " ", 
   "\"\<I was asking questions which nobody else had asked before,because \
nobody else had actually looked at certain structures.Therefore,as I will \
tell,the advent of the computer,not as a computer but as a drawing \
machine,was for me a major event....because for me computer graphics was a \
way of extending my hand,extending it and being able to draw things which my \
hand by itself,and the hands of nobody else before,would not have been able \
to represent.B.Mandelbrot\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.7961172866438007`*^9, 3.796117303088793*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ad95fc40-8fc9-4624-a256-2291709090c7"],

Cell[TextData[{
 "Lo Crittiamo prima con la chiave pubblica del docente in quanto m\
\[CloseCurlyQuote]>m,\nUna spiegazione rapida si pu\[OGrave] dare con un \
esempio con numeri pi\[UGrave] piccoli, la codifica \[EGrave] ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"a", "'"}]], " ", "mod", 
       RowBox[{"(", 
        RowBox[{"m", "'"}], ")"}]}], ")"}], "b"], 
    RowBox[{"mod", "(", "m", ")"}]}], TraditionalForm]],ExpressionUUID->
  "5d5a8abc-9112-4297-9854-8e823532425c"],
 "\nscriviamo tutte le chiavi in chiaro per vedere cosa succede"
}], "Text",
 CellChangeTimes->{{3.7961173204037924`*^9, 3.7961176458947926`*^9}, {
  3.796117687693798*^9, 3.796117756341798*^9}, {3.7961177899697933`*^9, 
  3.796117828995798*^9}, {3.796117868820794*^9, 3.7961180444227934`*^9}, {
  3.796118247391794*^9, 3.796118247730793*^9}, {3.796118301073794*^9, 
  3.796118330043798*^9}, {3.796118758234798*^9, 3.796118767537793*^9}, {
  3.7962846667663236`*^9, 
  3.7962846680465174`*^9}},ExpressionUUID->"2641b75f-bae2-459d-81fe-\
8a8fc00ccb57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listRSA", "[", 
   RowBox[{"aprime_", ",", "mprime_", ",", "b_", ",", "m_"}], "]"}], ":=", 
  " ", 
  RowBox[{
   RowBox[{"PowerMod", "[", 
    RowBox[{
     RowBox[{"PowerMod", "[", 
      RowBox[{"#", ",", "aprime", ",", "mprime"}], "]"}], ",", "b", ",", 
     "m"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsaCrypt1", "[", 
   RowBox[{"aprime_", ",", "mprime_", ",", "b_", ",", "m_", ",", "msg_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"listRSA", "[", 
    RowBox[{"b", ",", "m", ",", "aprime", ",", "mprime"}], "]"}], "@", 
   RowBox[{"ToCharacterCode", "[", "msg", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsaDecrypt1", "[", 
    RowBox[{"bprime_", ",", "mprime_", ",", "a_", ",", "m_", ",", "lst_"}], 
    "]"}], ":=", " ", 
   RowBox[{"FromCharacterCode", "[", 
    RowBox[{
     RowBox[{"listRSA", "[", 
      RowBox[{"a", ",", "m", ",", "bprime", ",", "mprime"}], "]"}], "@", 
     "lst"}], "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsaCrypt", "[", 
   RowBox[{"aprime_", ",", "mprime_", ",", "b_", ",", "m_", ",", "msg_"}], 
   "]"}], ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"mprime", ">", "m"}], ",", 
    RowBox[{"rsaCrypt1", "[", 
     RowBox[{"aprime", ",", "mprime", ",", "b", ",", "m", ",", "msg"}], "]"}],
     ",", 
    RowBox[{"rsaCrypt1", "[", 
     RowBox[{"b", ",", "m", ",", "aprime", ",", "mprime", ",", "msg"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsaDecrypt", "[", 
   RowBox[{"bprime_", ",", "mprime_", ",", "a_", ",", "m_", ",", "lst_"}], 
   "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"mprime", ">", "m"}], ",", 
    RowBox[{"rsaDecrypt1", "[", 
     RowBox[{"bprime", ",", "mprime", ",", "a", ",", "m", ",", "lst"}], "]"}],
     ",", 
    RowBox[{"rsaDecrypt1", "[", 
     RowBox[{"a", ",", "m", ",", "bprime", ",", "mprime", ",", "lst"}], 
     "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7962850243684464`*^9, 3.7962851043539104`*^9}, {
  3.796285150434952*^9, 3.7962851592526555`*^9}, {3.7962854273953466`*^9, 
  3.7962854746858435`*^9}, {3.7962855441255884`*^9, 3.7962856620965157`*^9}, {
  3.796285738781351*^9, 3.7962857436469946`*^9}, {3.7962858688392515`*^9, 
  3.796285878753017*^9}, {3.796285916688281*^9, 3.796286022564661*^9}, {
  3.796286632342718*^9, 3.79628670354115*^9}, {3.7962871772814007`*^9, 
  3.7962873130798893`*^9}, {3.7962873695752583`*^9, 3.7962874909540415`*^9}, {
  3.7962875443334475`*^9, 3.796287556144721*^9}, {3.796287654329896*^9, 
  3.7962876626072145`*^9}, {3.7962878151167564`*^9, 3.7962878237579136`*^9}, {
  3.796288278861752*^9, 3.796288303671238*^9}, {3.7962884448274364`*^9, 
  3.7962884457165937`*^9}, {3.7962904961927247`*^9, 3.7962905669526978`*^9}, {
  3.7962905978887043`*^9, 3.7962908018267035`*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"ece1b34a-6019-4923-bf8b-f320ca996e32"],

Cell["\<\
Abbiamo automatizzato il processo in modo che crittazione e decrittazione \
vengano eseguite prima con l\[CloseCurlyQuote]m pi\[UGrave] piccolo poi \
quello pi\[UGrave] grande \
\>", "Text",
 CellChangeTimes->{{3.7962908093647037`*^9, 
  3.796290873675703*^9}},ExpressionUUID->"409ac0ab-2656-4494-b132-\
03501e508318"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mprof", " ", "=", " ", 
   FormBox[
    "3239692717910546003514119488559977154010884191519986665759387181463221386\
2698727791094102157",
    TraditionalForm]}], ";"}]], "Input",
 CellChangeTimes->{{3.796285178303313*^9, 3.7962851826060696`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e8ac50f7-5db8-4fec-8df9-975d4bcc5c73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"aprof", " ", "=", " ", 
   FormBox[
    "2591754174328436802811295590847981614168263158442703075211905476116474774\
7860237097951508301",
    TraditionalForm]}], ";"}]], "Input",
 CellChangeTimes->{{3.796285189696599*^9, 3.7962851924922075`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"b87810f2-b140-4a3b-93c7-d608ac971902"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mym", "=", " ", 
   FormBox["134730867248747143322781722117343687452495402440369304273009",
    TraditionalForm]}], ";"}]], "Input",
 CellChangeTimes->{{3.796285208849184*^9, 3.796285212062728*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"03f156df-2192-49c5-b648-211e1ead1609"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mya", " ", "=", "164573911"}], ";"}]], "Input",
 CellChangeTimes->{{3.7962852190010633`*^9, 3.796285229450923*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"691760e6-f45a-4f9e-b555-cbbf860c2a6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "myb", " ", "=", 
   "10924854930282982244274559842650134912878167934073120994011"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7962852369565563`*^9, 3.796285241173273*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"fde1d247-b502-40c7-afe3-af038be01c19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"trym", ",", "trya", ",", "tryb"}], "}"}], "=", 
  RowBox[{"mab", "[", 
   RowBox[{"4", ",", "8"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796285682642026*^9, 3.796285705662018*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"fd16040c-c9d7-4609-94b4-dde14da5fdde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57365798657504309489687", ",", "21723187", ",", 
   "11432387927900351106907"}], "}"}]], "Output",
 CellChangeTimes->{3.796285707365367*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"0d1adb16-46d4-4a69-b690-3cf36a3dd1e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step1", "=", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"73", ",", "trya", ",", "trym"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796289035487918*^9, 3.796289049888796*^9}, {
  3.796289851314387*^9, 3.796289856296235*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"7d9570e5-fbd9-4afc-b9d3-f7698f32592d"],

Cell[BoxData["40443931286598605726024"], "Output",
 CellChangeTimes->{3.796289051617979*^9, 3.796289862785695*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"78750452-5cba-4a9c-8a00-7e2360006231"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step2", "=", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"step1", ",", "myb", ",", "mym"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796290207817704*^9, 3.7962902292197037`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"684122be-cd29-4401-8ccf-593a89dafa12"],

Cell[BoxData["38183387090008723193256634658486042492238920896922182824582"], \
"Output",
 CellChangeTimes->{3.7962902303406982`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"16f0b76a-4bca-4700-b3da-3e34fdc4dabf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step3", " ", "=", " ", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"step2", ",", "mya", ",", "mym"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.796289069213805*^9, 3.7962890839053483`*^9}, {
  3.796289875276079*^9, 3.7962898781946363`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"56a3c63a-d493-4bae-8c31-b731c473f7d4"],

Cell[BoxData["40443931286598605726024"], "Output",
 CellChangeTimes->{3.7962890844043484`*^9, 3.796289879031816*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"36fd061d-381c-4bcf-a51c-1d1809377b23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step4", " ", "=", " ", 
  RowBox[{"PowerMod", "[", 
   RowBox[{"step3", ",", "tryb", ",", "trym"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7962890874989295`*^9, 3.7962890990470953`*^9}, {
  3.796289882828317*^9, 3.796289886805127*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"fbeb175e-1e1c-45b0-b873-d7b13af8b58e"],

Cell[BoxData["73"], "Output",
 CellChangeTimes->{3.796289099358096*^9, 3.796289887377122*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"56c1ad9a-0cff-4f17-a40f-90cc4c989bb8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1904, 997},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"Report"}, "StandardReport.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Text"], TextJustification -> 1.]}, Visible -> False, 
  FrontEndVersion -> "12.0 for Microsoft Windows (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 279, 6, 22, "Department",ExpressionUUID->"fe6bf087-39c0-4d57-bbb8-676949ad7429"],
Cell[840, 28, 171, 3, 54, "Date",ExpressionUUID->"ef18cc5a-c401-44b0-a51b-2c900d04a1bf"],
Cell[CellGroupData[{
Cell[1036, 35, 344, 5, 119, "Title",ExpressionUUID->"b8994244-0fca-44bc-85f5-442afc4c6702"],
Cell[1383, 42, 646, 17, 150, "Author",ExpressionUUID->"09e83f57-2ba0-4605-8456-803100daaceb"],
Cell[CellGroupData[{
Cell[2054, 63, 250, 4, 86, "Section",ExpressionUUID->"7348fc72-0a82-422a-93e7-ec05ca114753"],
Cell[CellGroupData[{
Cell[2329, 71, 187, 3, 42, "Subsection",ExpressionUUID->"81e6d6f4-d46b-4563-8c7b-b0dffb28d66a"],
Cell[2519, 76, 207, 4, 41, "Text",ExpressionUUID->"4356a50f-3fc3-4472-ae74-face461776fa"],
Cell[2729, 82, 661, 13, 97, "CodeText",ExpressionUUID->"439c6d89-eac4-4078-b85d-3b0955330f1d"],
Cell[3393, 97, 475, 9, 70, "Text",ExpressionUUID->"8790ee4b-4e7b-4ea2-8ca6-d839c0c2c25c"],
Cell[3871, 108, 1940, 52, 238, "Text",ExpressionUUID->"ab166c8a-b880-418a-948e-f0f359bca1ee"],
Cell[5814, 162, 1928, 48, 70, "Text",ExpressionUUID->"45b7179a-180b-45d2-981f-1cd7235ffa50"]
}, Closed]],
Cell[CellGroupData[{
Cell[7779, 215, 159, 3, 41, "Subsection",ExpressionUUID->"cabe64b0-bca6-43b5-9d22-8e597daf2fe3"],
Cell[7941, 220, 198, 3, 41, "Text",ExpressionUUID->"b111f711-df1b-446c-850a-ed232cc7101d"],
Cell[8142, 225, 737, 14, 122, "Input",ExpressionUUID->"4fbaaade-e29e-4f18-ad2d-ab97b4f52026"],
Cell[8882, 241, 301, 6, 41, "Text",ExpressionUUID->"d94fc2c2-3b18-4b69-a368-e7175515a8ca"],
Cell[CellGroupData[{
Cell[9208, 251, 236, 4, 48, "Input",ExpressionUUID->"5e628863-340f-45c2-935c-07ab17249f85"],
Cell[9447, 257, 154, 2, 48, "Output",ExpressionUUID->"113552dd-4604-43d3-a2e4-1c64a02a5240"]
}, Open  ]],
Cell[9616, 262, 586, 10, 70, "Text",ExpressionUUID->"fbb49879-5776-44d7-bc1c-d8debfa85312"],
Cell[10205, 274, 1482, 36, 266, "Input",ExpressionUUID->"847edc61-7366-4813-85cc-75746b5f7c4b"],
Cell[11690, 312, 536, 11, 41, "Text",ExpressionUUID->"8636793d-2840-4d31-8ce6-e635380122bb"],
Cell[12229, 325, 1659, 37, 313, "Input",ExpressionUUID->"d0bb7de7-65dc-416b-84be-91aca69b66a9"],
Cell[13891, 364, 460, 9, 70, "Text",ExpressionUUID->"8465d221-715a-4cfc-b23e-bff051468095"],
Cell[14354, 375, 270, 7, 48, "Input",ExpressionUUID->"5839d800-b019-4f1b-9991-4a47a26c7926"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14673, 388, 168, 3, 86, "Section",ExpressionUUID->"7df0488e-d91b-4cc3-b655-701814b02422"],
Cell[CellGroupData[{
Cell[14866, 395, 187, 3, 42, "Subsection",ExpressionUUID->"b4c6cc9e-3654-43c9-9727-515183d4a568"],
Cell[15056, 400, 3166, 91, 542, "Text",ExpressionUUID->"9cefe237-e1bf-470c-a6b5-02e1d9de5442"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18259, 496, 163, 3, 42, "Subsection",ExpressionUUID->"fa37b89e-7e27-4d3b-9771-8f78e1dd2846"],
Cell[18425, 501, 245, 4, 42, "Text",ExpressionUUID->"5c1b513a-8ad8-4fee-acfa-96ecf4506779"],
Cell[18673, 507, 532, 14, 49, "Input",ExpressionUUID->"7a71d576-5406-4e5f-9d17-98e27a1b0329"],
Cell[19208, 523, 821, 14, 98, "Text",ExpressionUUID->"dbb0d2d1-3850-48f3-9fa4-51705e07ecbc"],
Cell[20032, 539, 2500, 64, 211, "Input",ExpressionUUID->"ab352f2f-5759-445d-aa37-3a61d00ced30"],
Cell[CellGroupData[{
Cell[22557, 607, 224, 4, 49, "Input",ExpressionUUID->"046b3850-d42b-4249-b590-d90ab636a271"],
Cell[22784, 613, 266, 6, 49, "Output",ExpressionUUID->"f13fca37-f09d-4847-8396-dc2c3b6eb74e"]
}, Open  ]],
Cell[23065, 622, 306, 7, 42, "Text",ExpressionUUID->"75bd5ad1-bbec-4ecc-b320-751b0be1e46b"],
Cell[23374, 631, 472, 13, 98, "Text",ExpressionUUID->"7884f221-ca30-4715-b8f6-736aed52d6fe"],
Cell[23849, 646, 263, 6, 42, "Text",ExpressionUUID->"8d32995c-f1ac-43d8-86a0-15ed263e1c36"],
Cell[24115, 654, 320, 7, 42, "Text",ExpressionUUID->"a2c92bf1-1112-43bd-a0a3-3ddad4554da8"],
Cell[24438, 663, 713, 12, 122, "Input",ExpressionUUID->"ad95fc40-8fc9-4624-a256-2291709090c7"],
Cell[25154, 677, 1126, 25, 100, "Text",ExpressionUUID->"2641b75f-bae2-459d-81fe-8a8fc00ccb57"],
Cell[26283, 704, 2965, 68, 170, "Input",ExpressionUUID->"ece1b34a-6019-4923-bf8b-f320ca996e32"],
Cell[29251, 774, 328, 7, 42, "Text",ExpressionUUID->"409ac0ab-2656-4494-b132-03501e508318"],
Cell[29582, 783, 360, 8, 49, "Input",ExpressionUUID->"e8ac50f7-5db8-4fec-8df9-975d4bcc5c73"],
Cell[29945, 793, 360, 8, 49, "Input",ExpressionUUID->"b87810f2-b140-4a3b-93c7-d608ac971902"],
Cell[30308, 803, 312, 6, 49, "Input",ExpressionUUID->"03f156df-2192-49c5-b648-211e1ead1609"],
Cell[30623, 811, 229, 4, 49, "Input",ExpressionUUID->"691760e6-f45a-4f9e-b555-cbbf860c2a6c"],
Cell[30855, 817, 289, 7, 49, "Input",ExpressionUUID->"fde1d247-b502-40c7-afe3-af038be01c19"],
Cell[CellGroupData[{
Cell[31169, 828, 314, 7, 49, "Input",ExpressionUUID->"fd16040c-c9d7-4609-94b4-dde14da5fdde"],
Cell[31486, 837, 262, 6, 49, "Output",ExpressionUUID->"0d1adb16-46d4-4a69-b690-3cf36a3dd1e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31785, 848, 327, 7, 49, "Input",ExpressionUUID->"7d9570e5-fbd9-4afc-b9d3-f7698f32592d"],
Cell[32115, 857, 197, 3, 49, "Output",ExpressionUUID->"78750452-5cba-4a9c-8a00-7e2360006231"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32349, 865, 281, 6, 49, "Input",ExpressionUUID->"684122be-cd29-4401-8ccf-593a89dafa12"],
Cell[32633, 873, 215, 4, 49, "Output",ExpressionUUID->"16f0b76a-4bca-4700-b3da-3e34fdc4dabf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32885, 882, 342, 7, 49, "Input",ExpressionUUID->"56a3c63a-d493-4bae-8c31-b731c473f7d4"],
Cell[33230, 891, 199, 3, 49, "Output",ExpressionUUID->"36fd061d-381c-4bcf-a51c-1d1809377b23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33466, 899, 344, 7, 49, "Input",ExpressionUUID->"fbeb175e-1e1c-45b0-b873-d7b13af8b58e"],
Cell[33813, 908, 176, 3, 49, "Output",ExpressionUUID->"56c1ad9a-0cff-4f17-a40f-90cc4c989bb8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

